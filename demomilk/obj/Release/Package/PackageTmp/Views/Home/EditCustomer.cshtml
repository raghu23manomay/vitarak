@model demomilk.Models.CustomerList
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Update Customer</title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/autocomplete/jquery.autocomplete.js"></script>

</head>
<body>
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <h2>Update Customer</h2>
                <button type="button" class="close" data-dismiss="modal" onclick="abc()">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-control" style="border-color: #ffffff;">
                    <div class="row">
                        <div class="col-md-3">
                            <label>CustomerName:</label>
                        </div>
                        <div class="col-md-9">
                            @Html.HiddenFor(model => model.CustomerID, new { @id = "CustomerID" })
                            @Html.TextBoxFor(a => a.CustomerName, new { @class = "form-control r-0 light s-12", placeholder = "Enter CustomerName", title = "CustomerName", @id = "CustomerName" })
                            <label style="color:red" id="CustomerNameVal">*</label>
                        </div>
                    </div>
                </div>
                <div class="form-control" style="border-color: #ffffff;">
                    <div class="row">
                        <div class="col-md-3">
                            <label>Address:</label>
                        </div>
                        <div class="col-md-9">

                            @Html.TextAreaFor(a => a.Address, new { @class = "form-control r-0 light s-12", placeholder = "Enter Address", title = "Address", @id = "Address" })
                        </div>
                    </div>
                </div>
                <div class="form-control" style="border-color: #ffffff;">
                    <div class="row">
                        <div class="col-md-3">
                            <label>Mobile:</label>
                        </div>
                        <div class="col-md-9">

                            @Html.TextBoxFor(a => a.Mobile, new { @class = "form-control r-0 light s-12", placeholder = "Enter Mobile", title = "Mobile", @id = "Mobile" })
                            <label style="color:red" id="MobileVal">*</label>
                        </div>
                    </div>

                </div>
                <div class="form-control">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="position">Select Area</label>
                        </div>
                        <div class="col-md-9">

                            @Html.DropDownList("model.ModeName", new SelectList((System.Collections.IEnumerable)ViewData["Area"], "Value", "Text",Model.AreaID), "Select Area", new { @class = "form-control input-sm", @id = "AreaID", Title = "ModeName" })
                            @*@Html.HiddenFor(model => model.AreaID, new { @id = "AreaID" })*@
                            @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
                            <label style="color:red" id="AreaVal">*</label>
                        </div>
                    </div>



                </div>
                <div class="form-control">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="position">Select Employee</label>
                        </div>
                        <div class="col-md-9">
                            
                            @Html.DropDownList("model.ModeName", new SelectList((System.Collections.IEnumerable)ViewData["Employee"], "Value", "Text",Model.SalesPersonID), "Select Sale Person", new { @class = "form-control input-sm", @id = "SalesPersonID", Title = "ModeName" })
                             @*@Html.TextBoxFor(a => a.SalesPersonID, new { @class = "form-control r-0 light s-12 ", @id = "SalesPerson", placeholder = "SalesPerson" })*@
                            @*@Html.HiddenFor(model => model.SalesPersonID, new { @id = "SalesPersonID" })*@
                            @Html.ValidationMessageFor(model => model.SalesPersonID, "", new { @class = "text-danger" })
                            <label style="color:red" id="EmployeeVal">*</label>
                        </div>
                    </div>

                </div>
                <div class="form-control">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="position">Select Vehicle</label>
                        </div>
                        <div class="col-md-9">
                            @Html.DropDownList("model.ModeName", new SelectList((System.Collections.IEnumerable)ViewData["Vehicle"], "Value", "Text",Model.VehicleID), "Select Vehicle", new { @class = "form-control input-sm", @id = "VehicleID", Title = "ModeName" })
                            @*@Html.TextBoxFor(a => a.VechicleNo, new { @class = "form-control r-0 light s-12 ", @id = "Vehicle", placeholder = " Vehicle" })*@
                            @*@Html.HiddenFor(model => model.VehicleID, new { @id = "VehicleID" })*@
                            @Html.ValidationMessageFor(model => model.VehicleID, "", new { @class = "text-danger" })
                            <label style="color:red" id="VehicleVal">*</label>
                        </div>
                    </div>

                </div>
                <div class="form-control">
                    <div class="row">
                        <div class="col-md-6">
                            <input type="checkbox" value="Delevery Charges" id="DeleveryCharge" />
                            <label>Delevery Charges</label>

                        </div>
                        <div class="col-md-6">
                            <input type="text" placeholder="0.00" id="DeliveryCharges" />
                        </div>
                    </div>

                </div>
                <div class="form-control">
                    <div class="row">
                        <div class="col-md-6">

                            <input type="checkbox" value="Delevery Charges" id="" />
                            <label>Bill Print Required</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" value="Delevery Charges" id="" checked />
                            <label>Acitve</label>

                        </div>
                    </div>



                </div>
                <div class="modal-footer">
                    <input class="btn-primary" type="submit" id="btnsave" value="Update" title="ClickToSave" />
                    <input type="button" class="btn-danger" id="btncancel" value="Cancel" title="ClickToCancel" data-dismiss="modal" onclick="abc();" />

                </div>

            </div>

        </div>
    </div>
</body>
</html>
<script>
    $(document).ready(function () {
        $("#DeleveryCharge").click(function () {
            $('#DeliveryCharges').attr("disabled", $(this).is(":checked"));
        });
    });

    function abc() {
        $('.modal-backdrop').remove();
    }
    $(document).ready(function () {
        getArea();
        getEmployee();
        getVehicle();
        $("#CustomerNameVal").hide();
        $("#AddressVal").hide();
        $("#AreaVal").hide();
        $("#MobileVal").hide();
        $("#VehicleVal").hide();
        $("#EmployeeVal").hide();
    });
    $('#btnsave').on('click', function () {

        var error = 0, regex = /^[a-zA-Z\s]+$/;
        if ($("#CustomerName").val() == "" || (!regex.test($("#CustomerName").val()))) {
            error = 1;
            $("#CustomerNameVal").show();
        }
        else {
            $("#CustomerNameVal").hide();
        }


        if ($("#Address").val() == "") {

            error = 1;
            $("#AddressVal").show();
        }
        else {
            $("#AddressVal").hide();
        }


        if ($("#Area").val() == "") {
            error = 1;
            $("#AreaVal").show();
        }
        else {
            $("#AreaVal").hide();
        }


        var a = $('#Mobile').val(), intRegex = /^[0-9]{10}$/;

        if ($('#Mobile').val() == '' || (!intRegex.test(a))) {
            error = 1;
            $('#MobileVal').show();
        }
        else {
            $('#MobileVal').hide();
        }



        if ($("#Employee").val() == "") {

            error = 1;
            $("#EmployeeVal").show();
        }
        else {
            $("#EmployeeVal").hide();
        }



        if ($("#Vehicle").val() == "") {

            error = 1;
            $("#VehicleVal").show();
        }
        else {
            $("#VehicleVal").hide();
        }
      if (error) {
            return false;
        }

        else {

            $.ajax({
                type: 'POST',
                dataType: 'json',
                url: '/Home/UpdateCustomer',

                data:
                {
                    CustomerID: $("#CustomerID").val(),
                    CustomerName: $("#CustomerName").val(),
                    Address: $("#Address").val(),
                    AreaID: $("#AreaID").val(),
                    Mobile: $("#Mobile").val(),
                    SalesPersonID: $("#SalesPersonID").val(),
                    VehicleID: $("#VehicleID").val(),
                    isActive: 1,
                    BillRequired: 1,
                    DeliveryCharges: $("#DeliveryCharges").val(),


                },
                success: function (da) {

                    alert(da);
                    $("#mdlAddRoute .close").click()
                    $('.modal-backdrop').remove();
                    location.reload();
                },

                error: function (XMLHttpRequest, textStatus, errorThrown) {

                }
            });
        }
    });

     function getArea()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                         url: "@Url.Action("GetArea", "Home")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#Area").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#AreaID").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }


     function getEmployee()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                         url: "@Url.Action("GetEmployee", "Home")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#SalesPerson").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#SalesPersonID").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }


     function getVehicle()
    {
             var returnResult = [];
                          $.ajax({
                        contentType: "application/json; charset=utf-8",
                         url: "@Url.Action("GetVehicle", "Home")",
                        method: 'GET',
                        async: 'false',
                        dataType: 'json',
                        success: function (result) {
                            var data = $.map(result, function (obj) {
                                obj.value = obj.Text; // desired field
                                obj.data = obj.Value; // desired field
                                returnResult.push(obj);
                                $("#Vehicle").autocomplete({
                                    lookup: returnResult,
                                    onSelect: function (suggestion) {
                                        $("#VehicleID").val(suggestion.data);

                                    }
                                });

                            });
                        },
                        error: function () { }
                  });
    }
</script>
